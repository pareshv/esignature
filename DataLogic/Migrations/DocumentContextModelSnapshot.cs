// <auto-generated />
using System;
using DataLogic.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLogic.Migrations
{
    [DbContext(typeof(DocumentContext))]
    partial class DocumentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DataLogic.Models.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("KeyValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("DataLogic.Models.DocumentHistory", b =>
                {
                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EdittedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReceivedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecipientCount")
                        .HasColumnType("int");

                    b.HasIndex("DocumentId");

                    b.ToTable("DocumentHistories");
                });

            modelBuilder.Entity("DataLogic.Models.DocumentInformation", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DocumentId");

                    b.ToTable("DocumentInformations");

                    b.HasDiscriminator<string>("Discriminator").HasValue("DocumentInformation");
                });

            modelBuilder.Entity("DataLogic.Models.DocumentStatus", b =>
                {
                    b.Property<bool>("Approval")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.HasIndex("DocumentId");

                    b.ToTable("DocumentStatuses");
                });

            modelBuilder.Entity("DataLogic.Models.ImageSignParameters", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AttachmentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<byte[]>("ImageStream")
                        .HasColumnType("varbinary(max)");

                    b.Property<double>("Opacity")
                        .HasColumnType("float");

                    b.Property<int>("PageNumber")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.Property<int>("XIndent")
                        .HasColumnType("int");

                    b.Property<int>("YIndent")
                        .HasColumnType("int");

                    b.HasKey("ImageId");

                    b.ToTable("ImageSignParameter");
                });

            modelBuilder.Entity("DataLogic.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DataLogic.Models.DocumentOnDatabaseModel", b =>
                {
                    b.HasBaseType("DataLogic.Models.DocumentInformation");

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)");

                    b.HasDiscriminator().HasValue("DocumentOnDatabaseModel");
                });

            modelBuilder.Entity("DataLogic.Models.DocumentOnFileSystemModel", b =>
                {
                    b.HasBaseType("DataLogic.Models.DocumentInformation");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("DocumentOnFileSystemModel");
                });

            modelBuilder.Entity("DataLogic.Models.DocumentHistory", b =>
                {
                    b.HasOne("DataLogic.Models.DocumentInformation", "DocumentInformations")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentInformations");
                });

            modelBuilder.Entity("DataLogic.Models.DocumentStatus", b =>
                {
                    b.HasOne("DataLogic.Models.DocumentInformation", "DocumentInformations")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentInformations");
                });
#pragma warning restore 612, 618
        }
    }
}
